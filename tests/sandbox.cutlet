# Copyright Â© 2021 Ron R Wills <ron@digitalcombine.ca>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Testing Sandboxes

# Remove the system library directory path
$library.path remove 0

import stdlib

global result = 0

#=============================================================================#
# Test 1: Attempt to call a core function in an empty sandbox.

print "Test 1: Call function in empty sandbox"

global sandbox1 [sandbox]

try {
  $sandbox1 eval {
    print "Is there anybody out there?"
  }

  # We shouldn't get here.
  global result = 1

} catch err {
  print "Successfully caught error: $err"
}

#=============================================================================#
# Test 2: We link the print function into the new sandbox and attempt to call
#         it.

print "Test 2: Link function in sandbox"

$sandbox1 link print

try {
  $sandbox1 eval {
    print "Is there anybody out there?"
  }
  print "Yes, we can hear you."

} catch err {
  # We shouldn't get here.
  print $err
  global result = 1
}

#=============================================================================#
# Test 3: Attempt to access ourselves to bypass the sandbox.

print "Test 3: Attempt to access sandbox within sandbox"

try {
  $sandbox1 eval {
    # We shouldn't be able to access ourself this way.
    $sandbox1 link print
  }
  global result = 1
} catch err {
  print "Successfully caught error: $err"
}

#=============================================================================#
# Test 4: Importing libraries.

print "Test 4: Import library into sandbox"

$sandbox1 global library.path = $library.path
$sandbox1 link import

try {
  $sandbox1 eval {
    import oo

    class test_class { }
  }

  # The library oo should only have been imported into the sandbox.
  try {
    class test_class { }

    global result = 1
  } catch err {
  }

} catch err {
  global result = 1
}

#=============================================================================#
# Test 5:

if {$result == 0} then {
  print "All of our sanbox tests passed!"
}
return $result
