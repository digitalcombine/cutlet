.\" Copyright Â© 2018 Ron R Wills <ron@digitalcombine.ca>
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright notice,
.\"    this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice,this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" 3. Neither the name of the copyright holder nor the names of its
.\"    contributors may be used to endorse or promote products derived from
.\"    this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
.\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate$
.Dt LIBCUTLET 3
.Os
.Sh NAME
.Nm libcutlet
.Nd a simple embeddable utility language
.Sh SYNOPSIS
.In cutlet
.Vt cutlet::interpreter
.Vt cutlet::frame
.Vt cutlet::sandbox
.Vt cutlet::component
.Vt cutlet::variable
.Sh OVERVIEW
The library
.Nm
contains the cutlet language.
.Bl -column -offset indent ".Sy Execution Stack" ".Sy Sandbox"
.It Sy Excution Stack Ta Sy Sandbox
.It Li Frame Ta Li Global Variables
.It Li " Local Variables" Ta Li Components
.It Li Frame Ta Li Previous Sandbox
.It Li " Local Variables" Ta
.It Li ... Ta
.El
.Sh INTERPRETER INTERFACE
.Bl -tag -width indent
.It Vt class cutlet::interpreter
The toplevel class to the cutlet interpreter.
.Bl -tag -width indent
.It Ft ast::node::pointer Fn operator() "cutlet::variable::pointer code"
.It Ft ast::node::pointer Fn operator() "const std::string &code"
.It Ft ast::node::pointer Fn operator() "const parser::token &code"
.It Ft ast::node::pointer Fn operator() "std::istream &code" "const std::string &filename" "bool interactive = false"
The
.Fn operator()
method executes the given
.Ar code
with the interpreter.
When compiling from an input stream, the
.Ar filename
is given for debugging and error messages.
When
.Ar interactive
is true then the
.Ar code
is executed line by line otherwise it is parsed and executed in its
entirety.
.Pp
The
.Ar code
is parsed and compiled into an abstract syntax tree.
The tree is executed directly and returned by these methods.
The returned tree node can be used to execute the code again.
This is how most components work.
.It Ft ast::node::pointer Fn compile_file "const std::string &filename"
This is a convinent method that opens and passes the given
.Ar filename
to the appropriate
.Fn operator()
method to execute it.
.It Ft cutlet::variable::pointer Fn expr "cutlet::variable::pointer line"
.It Ft cutlet::variable::pointer Fn expr "const std::string &line"
The
.Fn expr
method excutes a single
.Ar line
command and returns the result of it just like a subcommand.
.It Ft cutlet::variable::pointer Fn call "const std::string &command" "const cutlet::list &arguments"
The
.Fn call
method is used to call and execute a global component directly.
The return value comes directly from the components returned value.
.El
.El
.Sh SEE ALSO
.Xr cutlet 1
